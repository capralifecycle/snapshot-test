name: ci
on:
  push:
    branches:
      - "**"

defaults:
  run:
    # NOTE: A bit stricter than the default bash options used by GitHub Actions
    shell: bash --noprofile --norc -euo pipefail {0}

jobs:
  build-and-release:
    runs-on: ubuntu-24.04
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4.7.1
        with:
          distribution: "zulu"
          java-version: "21.0.5"
          java-package: "jdk"

      - uses: capralifecycle/actions-lib/check-runtime-dependencies@15d6e3ef41e608eb59e4c12c656018b832c0117c # v1.6.1

      - name: cache mvn
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: release preparation
        id: prep
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          major_version="$(sed -n "s/^.*<major-version>\([0-9]\{1,\}\)<\/major-version>.*$/\1/p" pom.xml)"
          echo "$major_version" | grep -q "^[0-9]\{1,\}$" || {
            echo "ERROR: Failed to extract <major-version> from pom.xml"
            exit 1
          }
          echo "major-version=$major_version" >> "$GITHUB_OUTPUT"

      - uses: capralifecycle/actions-lib/generate-tag@15d6e3ef41e608eb59e4c12c656018b832c0117c # v1.6.1
        id: tag
        with:
          tag-prefix: "${{ steps.prep.outputs.major-version }}"
          tag-type: "punctuated-timestamp-tag"

      - name: resolve dependencies
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: "${{ steps.tag.outputs.tag }}"
        # Needs to run compile first in order to resolve sibling dependencies, see https://stackoverflow.com/a/1905927
        run: mvn -B -Drevision="$TAG" -Dtag="$TAG" compile dependency:resolve

      - name: conditional release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SHARED_SONAR_TOKEN }}
          CONDITIONAL_RELEASE: ${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
          TAG: "${{ steps.tag.outputs.tag }}"

        run: |
          if [ "$CONDITIONAL_RELEASE" = "true" ]; then
            echo "ve '$TAG'"
            mvn -B source:jar deploy scm:tag -Drevision="$TAG" -Dtag="$TAG" \
              org.apache.maven.plugins:maven-enforcer-plugin:3.0.0-M3:enforce -Drules=requireReleaseDeps
          else
            mvn -B -U clean verify
          fi
